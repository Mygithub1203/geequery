package com.github.geequery.codegen.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import jef.codegen.support.NotModified;
/**
 * This class was generated by JEF according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(name="user_third")
public class UserThird extends DataObject{


	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Id
	@Column(name="id",columnDefinition="varchar(36)",length=36,nullable=false)
	private String id;

	@Column(name="userid",columnDefinition="char(12)",length=12,nullable=false)
	private String userid;

	@Column(name="type",columnDefinition="char(10)",length=10)
	private String type;

	public void setId(String obj){
		this.id = obj;
	}

	public String getId(){
		return id;
	}

	public void setUserid(String obj){
		this.userid = obj;
	}

	public String getUserid(){
		return userid;
	}

	public void setType(String obj){
		this.type = obj;
	}

	public String getType(){
		return type;
	}

	public UserThird(){
	}

	public UserThird(String id){
		this.id = id;
	}


   public enum Field implements jef.database.Field{id,userid,type}
}